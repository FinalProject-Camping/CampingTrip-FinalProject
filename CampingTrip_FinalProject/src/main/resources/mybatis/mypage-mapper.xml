<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypage">

	<resultMap type="myCampDto" id="myCampMap">
		<result property="campno" column="CAMPNO"/>
		<result property="name" column="NAME"/>
		<result property="camp_type" column="CAMP_TYPE"/>
		<result property="address" column="ADDRESS"/>
		<result property="address_detail" column="ADDRESS_DETAIL"/>
		<result property="service" column="SERVICE"/>
		<result property="intro" column="INTRO"/>
		<result property="rule" column="RULE"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="tag" column="TAG"/>
		<result property="view_count" column="VIEW_COUNT"/>
		<result property="thumsnail" column="THUMSNAIL"/>
		<result property="create_date" column="CREATE_DATE"/>
		<collection property="myRoomdto" resultMap="myRoomMap"/>
	</resultMap>
	
	<resultMap type="myRoomdto" id="myRoomMap">
		<result property="roomno" column="ROOMNO"/>
		<result property="campno" column="CAMPNO"/>
		<result property="room_name" column="ROOM_NAME"/>
		<result property="room_price" column="ROOM_PRICE"/>
		<result property="guest_number" column="GUEST_NUMBER"/>
		<result property="room_content" column="ROOM_CONTENT"/>
		<result property="thumsnail" column="THUMSNAIL"/>
		<collection property="myCampDto" resultMap="myCampMap"/>
	</resultMap>
	
	<resultMap type="myMemberDto" id="myMemberMap">
		<result property="myno" column="MYNO"/>
		<result property="myid" column="MYID"/>
		<result property="myrole" column="MYROLE"/>
		<result property="mypenalty" column="MYPENALTY"/>
		<collection property="report" resultMap="report"/>
		<collection property="myPointDto" resultMap="myPointMap"/>
		<collection property="myCampDto" resultMap="myCampMap"/>
		<collection property="myReservDto" resultMap="myReservMap"/>
	</resultMap>
	
	<resultMap type="report" id="report">
		<result property="reportseq" column="REPORTSEQ"/>
		<result property="reportdate" column="REPORTDATE"/>
		<result property="reportid" column="REPORTID"/>
		<result property="reportcontent" column="REPORTCONTENT"/>
		<result property="filepath" column="FILEPATH"/>
		<result property="joonggoseq" column="JOONGGOSEQ"/>
		<result property="writer" column="WRITER"/>
		<collection property="myMemberDto" resultMap="myMemberMap"/>
	</resultMap>
	
	
	<resultMap type="myReservDto" id="myReservMap">
		<result property="reservno" column="RESERVNO"/>
		<result property="campno" column="CAMPNO"/>
		<result property="roomno" column="ROOMNO"/>
		<result property="userid" column="USERID"/>
		<result property="user_name" column="USER_NAME"/>
		<result property="user_contact" column="USER_CONTACT"/>
		<result property="guest_number" column="GUEST_NUMBER"/>
		<result property="check_in" column="CHECK_IN"/>
		<result property="check_out" column="CHECK_OUT"/>
		<result property="status" column="STATUS"/>
		<result property="create_date" column="CREATE_DATE"/>
		<collection property="myCampDto" resultMap="myCampMap"/>
		<collection property="myRoomdto" resultMap="myRoomMap"/>
	</resultMap>
	
	
	
	
	
	<resultMap type="myJoonggoDto" id="myJoonggoMap">
		<result property="seq" column="SEQ"/>
		<result property="id" column="ID"/>
		<result property="regdate" column="REGDATE"/>
		<result property="title" column="TITLE"/>
		<result property="content" column="CONTENT"/>
		<result property="category" column="CATEGORY"/>
		<result property="price" column="PRICE"/>
		<result property="place" column="PLACE"/>
		<result property="tag" column="TAG"/>
		<result property="quality" column="QUALITY"/>
		<result property="delivery" column="DELIVERY"/>
		<result property="agree" column="AGREE"/>
		<result property="trade" column="TRADE"/>
		<result property="hit" column="HIT"/>
		<result property="heart" column="HEART"/>
		<result property="imglist" column="IMGLIST"/>
		<collection property="myHeartDto" resultMap="myHeartMap"/>
	</resultMap>
	
	
	<resultMap type="myHeartDto" id="myHeartMap">
		<result property="heartdate" column="HEARTDATE"/>
		<result property="heartid" column="HEARTID"/>
		<result property="joonggoseq" column="JOONGGOSEQ"/>
	</resultMap>
	
	
	
	<resultMap type="myPointDto" id="myPointMap">
		<result property="pointSeq" column="POINTSEQ"/>
		<result property="pointId" column="POINTID"/>
		<result property="pointDetail" column="POINTDETAIL"/>
		<result property="pointGetDate" column="POINTGETDATE"/>
		<result property="getPoint" column="GETPOINT"/>
		<result property="usePoint" column="USEPOINT"/>
		<collection property="myMemberDto" resultMap="myMemberMap"/>
	</resultMap>
	
	
	<!-- 사용자 -->
	<!-- 찜리스트 -->
	<select id="likelist" resultType="myJoonggoDto">
		SELECT JOONGGO_HEART.HEARTID, MYMEMBER.MYID, JOONGGO.ID, MYMEMBER.MYNAME, JOONGGO.TITLE, JOONGGO.IMGLIST, JOONGGO.SEQ
		FROM MYMEMBER, JOONGGO, JOONGGO_HEART
		WHERE JOONGGO_HEART.HEARTID = MYMEMBER.MYID
		AND JOONGGO_HEART.JOONGGOSEQ = JOONGGO.SEQ
		AND MYMEMBER.MYID = #{userId}
	</select>
	
	
	<!-- 포인트 내역 -->
	<select id="myPointList" resultType="myPointDto">
		SELECT POINT.POINTID, MYMEMBER.MYID, POINTSEQ, POINTDETAIL, POINTGETDATE, GETPOINT, USEPOINT
		FROM MYMEMBER, POINT
		WHERE MYMEMBER.MYID = POINT.POINTID
		AND MYMEMBER.MYID = #{userId}
	</select>
	
	<!-- 회원 신고 목록 -->
	<select id="myReportList" resultType="report">
		SELECT REPORT.REPORTID, MYMEMBER.MYID, REPORTSEQ, REPORTDATE, REPORTCONTENT, WRITER
		FROM MYMEMBER, REPORT
		WHERE MYMEMBER.MYID = REPORT.REPORTID
		AND MYMEMBER.MYID = #{userId}
	</select>
	
	<!-- 회원 캠핑지 예약 목록 -->
	<select id="myReservList" resultType="myReservDto">
		SELECT RESERVATION.USERID, MYMEMBER.MYID, CAMP.CAMPNO, RESERVATION.RESERVNO, RESERVATION.USER_NAME, GUEST_NUMBER, CHECK_IN, CHECK_OUT, STATUS
		FROM MYMEMBER, RESERVATION, CAMP
		WHERE MYMEMBER.MYID = RESERVATION.USERID
		AND CAMP.CAMPNO = RESERVATION.RESERVNO
		AND MYMEMBER.MYID = #{userId}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	<!-- 판매자 -->
	
	<!-- 메인화면 -->
	<select id="reservList" resultType="myReservDto">
		SELECT
			RESERVATION.USERID,
			MYMEMBER.MYID,
			CAMP.WRITER,
			CAMP.NAME,
			CAMP.CAMPNO,
			ROOM.ROOM_NAME,
			RESERVATION.RESERVNO,
			CAMP.NAME,
			RESERVATION.USER_NAME,
			RESERVATION.CHECK_IN,
			RESERVATION.CHECK_OUT,
			RESERVATION.GUEST_NUMBER,
			RESERVATION.STATUS
		FROM MYMEMBER
		JOIN CAMP ON (MYMEMBER.MYID = CAMP.WRITER)
		JOIN RESERVATION ON (CAMP.CAMPNO = RESERVATION.CAMPNO)
		JOIN ROOM ON (ROOM.ROOMNO = RESERVATION.ROOMNO)
		WHERE MYMEMBER.MYID = #{userId}
		AND STATUS = 'Y'
	</select>
	
	
	<!-- 예약 detail -->
	<select id="reservSelectOne" resultType="myReservDto" resultMap="myReservMap" parameterType="int">
		SELECT RESERVNO, CAMP.NAME, ROOM.ROOM_NAME, USER_NAME, CHECK_IN, CHECK_OUT, RESERVATION.GUEST_NUMBER, STATUS, RESERVATION.CREATE_DATE, RESERVATION.USER_CONTACT
		FROM RESERVATION
		JOIN CAMP ON (RESERVATION.CAMPNO = CAMP.CAMPNO)
		JOIN ROOM ON (RESERVATION.ROOMNO = ROOM.ROOMNO)
		WHERE RESERVATION.RESERVNO = #{reservno}
	</select>
	
	
	
	<update id="reservUpdate" parameterType="myReservDto">
		UPDATE RESERVATION
		SET STATUS = 'N'
		WHERE RESERVNO = #{reservno}
	</update>
	
	<update id="reservCancel" parameterType="myReservDto">
		UPDATE RESERVATION
		SET STATUS = 'C'
		WHERE RESERVNO = #{reservno}
	</update>
	
	
	<select id="reservFinish" resultType="myReservDto">
		SELECT
			RESERVATION.USERID,
			MYMEMBER.MYID,
			CAMP.WRITER,
			CAMP.NAME,
			CAMP.CAMPNO,
			ROOM.ROOM_NAME,
			RESERVATION.RESERVNO,
			CAMP.NAME,
			RESERVATION.USER_NAME,
			RESERVATION.CHECK_IN,
			RESERVATION.CHECK_OUT,
			RESERVATION.GUEST_NUMBER,
			RESERVATION.STATUS
		FROM MYMEMBER
		JOIN CAMP ON (MYMEMBER.MYID = CAMP.WRITER)
		JOIN RESERVATION ON (CAMP.CAMPNO = RESERVATION.CAMPNO)
		JOIN ROOM ON (ROOM.ROOMNO = RESERVATION.ROOMNO)
		WHERE MYMEMBER.MYID = #{userId}
		AND STATUS = 'N'
	</select>
	
	<select id="myreservCancel" resultType="myReservDto">
		SELECT
			RESERVATION.USERID,
			MYMEMBER.MYID,
			CAMP.WRITER,
			CAMP.NAME,
			CAMP.CAMPNO,
			ROOM.ROOM_NAME,
			RESERVATION.RESERVNO,
			CAMP.NAME,
			RESERVATION.USER_NAME,
			RESERVATION.CHECK_IN,
			RESERVATION.CHECK_OUT,
			RESERVATION.GUEST_NUMBER,
			RESERVATION.STATUS
		FROM MYMEMBER
		JOIN CAMP ON (MYMEMBER.MYID = CAMP.WRITER)
		JOIN RESERVATION ON (CAMP.CAMPNO = RESERVATION.CAMPNO)
		JOIN ROOM ON (ROOM.ROOMNO = RESERVATION.ROOMNO)
		WHERE MYMEMBER.MYID = #{userId}
		AND STATUS = 'C'
	</select>
	
	
	<!-- 캠핑지 정보수정(판매자 캠핑지 리스트) -->
	<select id="campInfoList" resultType="myCampDto">
		SELECT CAMP.CAMPNO, CAMP.NAME, CAMP.ADDRESS
		FROM CAMP
		JOIN MYMEMBER ON (MYMEMBER.MYID = CAMP.WRITER)
		WHERE MYMEMBER.MYID = #{userId}
	</select>
	
	
	<select id="roomList" resultType="myRoomdto">
		SELECT ROOM.ROOMNO, ROOM.CAMPNO, ROOM_NAME, ROOM_PRICE, GUEST_NUMBER, ROOM_CONTENT
		FROM ROOM
		JOIN CAMP ON (ROOM.CAMPNO = CAMP.CAMPNO)
		JOIN MYMEMBER ON (MYMEMBER.MYID = CAMP.WRITER)
		WHERE MYMEMBER.MYID = #{userId}
	</select>
	
	
	
	<select id="selectOne" resultType="myRoomdto" parameterType="int">
		SELECT CAMP.NAME, CAMP.CAMPNO, ROOM.ROOMNO, ROOM_NAME, ROOM_PRICE, GUEST_NUMBER, ROOM_CONTENT
		FROM ROOM
		JOIN CAMP
		ON (CAMP.CAMPNO = ROOM.CAMPNO)
		WHERE ROOMNO = #{roomno}
	</select>
	
	<update id="update" parameterType="myRoomdto">
		UPDATE ROOM
		SET ROOM_NAME = #{room_name}, ROOM_PRICE = #{room_price}, GUEST_NUMBER = #{guest_number}, ROOM_CONTENT = #{room_content}
		WHERE ROOMNO = #{roomno}
	</update>
	
	
	
	
	
	
	<!-- 관리자 -->
	
	<delete id="memberDelete" parameterType="int">
		DELETE MYMEMBER
		WHERE MYNO=#{myno}
	</delete>
	
	
	<select id="reportList" parameterType="report" resultType="report">
		SELECT REPORTSEQ, REPORTDATE, REPORTID, REPORTCONTENT, WRITER
		FROM REPORT
	</select>
	
	<select id="reportSelectOne" resultType="report" parameterType="int">
		SELECT REPORTSEQ, REPORTDATE, REPORTID, REPORTCONTENT, FILEPATH, JOONGGOSEQ, WRITER
		FROM REPORT
		WHERE REPORTSEQ = #{reportseq}
	</select>
	
	
	<select id="campList" resultMap="myCampMap">
		SELECT CAMPNO, NAME, ADDRESS, ADDRESS_DETAIL
		FROM CAMP
	</select>
	
	<delete id="myCampDelete" parameterType="int">
		DELETE FROM CAMP
		WHERE CAMPNO = #{campno}
	</delete>
	
	<update id="myPenalty" parameterType="myMemberDto">
		UPDATE MYMEMBER
		SET MYPENALTY = MYPENALTY + 1
		WHERE MYNO = #{myno}
	</update>
	
	
	
	
	<!-- 게시글 전체목록 조회 및 검색 조회 -->
	<select id="listAll" resultType="com.camping.controller.model.member.dto.MemberDto">
		SELECT *
		FROM MYMEMBER
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="search"/>
		ORDER BY MYNO DESC
	</select>
	
	<select id="camplistAll" resultType="com.camping.controller.model.camp.dto.CampDto">
		SELECT *
		FROM CAMP
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="campsearch"/>
		ORDER BY CAMPNO DESC
	</select>
	
	<select id="reportlistAll" resultType="com.camping.controller.model.joonggo.dto.report">
		SELECT *
		FROM REPORT
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="reportsearch"/>
		ORDER BY REPORTSEQ DESC
	</select>
	
	
	
	
	
	
	
	<!-- 게시글 레코드 갯수 -->
	<select id="countAtricle" resultType="int">
		SELECT COUNT(*) FROM MYMEMBER
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="search"/>
	</select>
	
	<select id="campcountAtricle" resultType="int">
		SELECT COUNT(*) FROM CAMP
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="campsearch"/>
	</select>
	
	<select id="reportcountAtricle" resultType="int">
		SELECT COUNT(*) FROM REPORT
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="reportsearch"/>
	</select>
	
	
	
	
	
	
	
	
	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘 수 있다 -->
	<sql id="search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE MYID like '%'||#{keyword}||'%'
				OR MYROLE like '%'||#{keyword}||'%'
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	
	<sql id="campsearch">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE ADDRESS like '%'||#{keyword}||'%'
				OR ADDRESS_DETAIL like '%'||#{keyword}||'%'
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	
	<sql id="reportsearch">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE REPORTID like '%'||#{keyword}||'%'
				OR REPORTCONTENT like '%'||#{keyword}||'%'
				OR WRITER like '%'||#{keyword}||'%'
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	
	
</mapper>



